#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RoadBook.CsharpBasic.Chapter12.LinqProvider
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="testdb")]
	public partial class BoardDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 확장성 메서드 정의
    partial void OnCreated();
    partial void InsertTB_BOARD(TB_BOARD instance);
    partial void UpdateTB_BOARD(TB_BOARD instance);
    partial void DeleteTB_BOARD(TB_BOARD instance);
    partial void InsertTB_CATEGORY(TB_CATEGORY instance);
    partial void UpdateTB_CATEGORY(TB_CATEGORY instance);
    partial void DeleteTB_CATEGORY(TB_CATEGORY instance);
    partial void InsertTB_REPLY(TB_REPLY instance);
    partial void UpdateTB_REPLY(TB_REPLY instance);
    partial void DeleteTB_REPLY(TB_REPLY instance);
    #endregion
		
		public BoardDataContext() : 
				base(global::RoadBook.CsharpBasic.Chapter12.Properties.Settings.Default.testdbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BoardDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BoardDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BoardDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BoardDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TB_BOARD> TB_BOARD
		{
			get
			{
				return this.GetTable<TB_BOARD>();
			}
		}
		
		public System.Data.Linq.Table<TB_CATEGORY> TB_CATEGORY
		{
			get
			{
				return this.GetTable<TB_CATEGORY>();
			}
		}
		
		public System.Data.Linq.Table<TB_REPLY> TB_REPLY
		{
			get
			{
				return this.GetTable<TB_REPLY>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_BOARD")]
	public partial class TB_BOARD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDX;
		
		private string _TITLE;
		
		private string _CONTENT;
		
		private string _WRITER_NAME;
		
		private System.Nullable<System.DateTime> _CREATE_DATE;
		
		private System.Nullable<System.DateTime> _MODIFY_DATE;
		
		private string _TAG;
		
		private System.Nullable<int> _C_IDX;
		
		private EntitySet<TB_REPLY> _TB_REPLY;
		
		private EntityRef<TB_CATEGORY> _TB_CATEGORY;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDXChanging(int value);
    partial void OnIDXChanged();
    partial void OnTITLEChanging(string value);
    partial void OnTITLEChanged();
    partial void OnCONTENTChanging(string value);
    partial void OnCONTENTChanged();
    partial void OnWRITER_NAMEChanging(string value);
    partial void OnWRITER_NAMEChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    partial void OnMODIFY_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFY_DATEChanged();
    partial void OnTAGChanging(string value);
    partial void OnTAGChanged();
    partial void OnC_IDXChanging(System.Nullable<int> value);
    partial void OnC_IDXChanged();
    #endregion
		
		public TB_BOARD()
		{
			this._TB_REPLY = new EntitySet<TB_REPLY>(new Action<TB_REPLY>(this.attach_TB_REPLY), new Action<TB_REPLY>(this.detach_TB_REPLY));
			this._TB_CATEGORY = default(EntityRef<TB_CATEGORY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDX", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDX
		{
			get
			{
				return this._IDX;
			}
			set
			{
				if ((this._IDX != value))
				{
					this.OnIDXChanging(value);
					this.SendPropertyChanging();
					this._IDX = value;
					this.SendPropertyChanged("IDX");
					this.OnIDXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE", DbType="VarChar(200)")]
		public string TITLE
		{
			get
			{
				return this._TITLE;
			}
			set
			{
				if ((this._TITLE != value))
				{
					this.OnTITLEChanging(value);
					this.SendPropertyChanging();
					this._TITLE = value;
					this.SendPropertyChanged("TITLE");
					this.OnTITLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTENT", DbType="VarChar(MAX)")]
		public string CONTENT
		{
			get
			{
				return this._CONTENT;
			}
			set
			{
				if ((this._CONTENT != value))
				{
					this.OnCONTENTChanging(value);
					this.SendPropertyChanging();
					this._CONTENT = value;
					this.SendPropertyChanged("CONTENT");
					this.OnCONTENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WRITER_NAME", DbType="VarChar(10)")]
		public string WRITER_NAME
		{
			get
			{
				return this._WRITER_NAME;
			}
			set
			{
				if ((this._WRITER_NAME != value))
				{
					this.OnWRITER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._WRITER_NAME = value;
					this.SendPropertyChanged("WRITER_NAME");
					this.OnWRITER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFY_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFY_DATE
		{
			get
			{
				return this._MODIFY_DATE;
			}
			set
			{
				if ((this._MODIFY_DATE != value))
				{
					this.OnMODIFY_DATEChanging(value);
					this.SendPropertyChanging();
					this._MODIFY_DATE = value;
					this.SendPropertyChanged("MODIFY_DATE");
					this.OnMODIFY_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAG", DbType="VarChar(500)")]
		public string TAG
		{
			get
			{
				return this._TAG;
			}
			set
			{
				if ((this._TAG != value))
				{
					this.OnTAGChanging(value);
					this.SendPropertyChanging();
					this._TAG = value;
					this.SendPropertyChanged("TAG");
					this.OnTAGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_IDX", DbType="Int")]
		public System.Nullable<int> C_IDX
		{
			get
			{
				return this._C_IDX;
			}
			set
			{
				if ((this._C_IDX != value))
				{
					if (this._TB_CATEGORY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnC_IDXChanging(value);
					this.SendPropertyChanging();
					this._C_IDX = value;
					this.SendPropertyChanged("C_IDX");
					this.OnC_IDXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_BOARD_TB_REPLY", Storage="_TB_REPLY", ThisKey="IDX", OtherKey="B_IDX")]
		public EntitySet<TB_REPLY> TB_REPLY
		{
			get
			{
				return this._TB_REPLY;
			}
			set
			{
				this._TB_REPLY.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_CATEGORY_TB_BOARD", Storage="_TB_CATEGORY", ThisKey="C_IDX", OtherKey="IDX", IsForeignKey=true)]
		public TB_CATEGORY TB_CATEGORY
		{
			get
			{
				return this._TB_CATEGORY.Entity;
			}
			set
			{
				TB_CATEGORY previousValue = this._TB_CATEGORY.Entity;
				if (((previousValue != value) 
							|| (this._TB_CATEGORY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_CATEGORY.Entity = null;
						previousValue.TB_BOARD.Remove(this);
					}
					this._TB_CATEGORY.Entity = value;
					if ((value != null))
					{
						value.TB_BOARD.Add(this);
						this._C_IDX = value.IDX;
					}
					else
					{
						this._C_IDX = default(Nullable<int>);
					}
					this.SendPropertyChanged("TB_CATEGORY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_REPLY(TB_REPLY entity)
		{
			this.SendPropertyChanging();
			entity.TB_BOARD = this;
		}
		
		private void detach_TB_REPLY(TB_REPLY entity)
		{
			this.SendPropertyChanging();
			entity.TB_BOARD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_CATEGORY")]
	public partial class TB_CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDX;
		
		private string _CATEGORY_NM;
		
		private EntitySet<TB_BOARD> _TB_BOARD;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDXChanging(int value);
    partial void OnIDXChanged();
    partial void OnCATEGORY_NMChanging(string value);
    partial void OnCATEGORY_NMChanged();
    #endregion
		
		public TB_CATEGORY()
		{
			this._TB_BOARD = new EntitySet<TB_BOARD>(new Action<TB_BOARD>(this.attach_TB_BOARD), new Action<TB_BOARD>(this.detach_TB_BOARD));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDX", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDX
		{
			get
			{
				return this._IDX;
			}
			set
			{
				if ((this._IDX != value))
				{
					this.OnIDXChanging(value);
					this.SendPropertyChanging();
					this._IDX = value;
					this.SendPropertyChanged("IDX");
					this.OnIDXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORY_NM", DbType="VarChar(50)")]
		public string CATEGORY_NM
		{
			get
			{
				return this._CATEGORY_NM;
			}
			set
			{
				if ((this._CATEGORY_NM != value))
				{
					this.OnCATEGORY_NMChanging(value);
					this.SendPropertyChanging();
					this._CATEGORY_NM = value;
					this.SendPropertyChanged("CATEGORY_NM");
					this.OnCATEGORY_NMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_CATEGORY_TB_BOARD", Storage="_TB_BOARD", ThisKey="IDX", OtherKey="C_IDX")]
		public EntitySet<TB_BOARD> TB_BOARD
		{
			get
			{
				return this._TB_BOARD;
			}
			set
			{
				this._TB_BOARD.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_BOARD(TB_BOARD entity)
		{
			this.SendPropertyChanging();
			entity.TB_CATEGORY = this;
		}
		
		private void detach_TB_BOARD(TB_BOARD entity)
		{
			this.SendPropertyChanging();
			entity.TB_CATEGORY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_REPLY")]
	public partial class TB_REPLY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDX;
		
		private string _COMMENT;
		
		private string _WRITER_NAME;
		
		private System.Nullable<System.DateTime> _CREATE_DATE;
		
		private System.Nullable<System.DateTime> _MODIFY_DATE;
		
		private System.Nullable<int> _B_IDX;
		
		private EntityRef<TB_BOARD> _TB_BOARD;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDXChanging(int value);
    partial void OnIDXChanged();
    partial void OnCOMMENTChanging(string value);
    partial void OnCOMMENTChanged();
    partial void OnWRITER_NAMEChanging(string value);
    partial void OnWRITER_NAMEChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    partial void OnMODIFY_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFY_DATEChanged();
    partial void OnB_IDXChanging(System.Nullable<int> value);
    partial void OnB_IDXChanged();
    #endregion
		
		public TB_REPLY()
		{
			this._TB_BOARD = default(EntityRef<TB_BOARD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDX", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDX
		{
			get
			{
				return this._IDX;
			}
			set
			{
				if ((this._IDX != value))
				{
					this.OnIDXChanging(value);
					this.SendPropertyChanging();
					this._IDX = value;
					this.SendPropertyChanged("IDX");
					this.OnIDXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMMENT", DbType="VarChar(MAX)")]
		public string COMMENT
		{
			get
			{
				return this._COMMENT;
			}
			set
			{
				if ((this._COMMENT != value))
				{
					this.OnCOMMENTChanging(value);
					this.SendPropertyChanging();
					this._COMMENT = value;
					this.SendPropertyChanged("COMMENT");
					this.OnCOMMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WRITER_NAME", DbType="VarChar(10)")]
		public string WRITER_NAME
		{
			get
			{
				return this._WRITER_NAME;
			}
			set
			{
				if ((this._WRITER_NAME != value))
				{
					this.OnWRITER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._WRITER_NAME = value;
					this.SendPropertyChanged("WRITER_NAME");
					this.OnWRITER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFY_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFY_DATE
		{
			get
			{
				return this._MODIFY_DATE;
			}
			set
			{
				if ((this._MODIFY_DATE != value))
				{
					this.OnMODIFY_DATEChanging(value);
					this.SendPropertyChanging();
					this._MODIFY_DATE = value;
					this.SendPropertyChanged("MODIFY_DATE");
					this.OnMODIFY_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_IDX", DbType="Int")]
		public System.Nullable<int> B_IDX
		{
			get
			{
				return this._B_IDX;
			}
			set
			{
				if ((this._B_IDX != value))
				{
					if (this._TB_BOARD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnB_IDXChanging(value);
					this.SendPropertyChanging();
					this._B_IDX = value;
					this.SendPropertyChanged("B_IDX");
					this.OnB_IDXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_BOARD_TB_REPLY", Storage="_TB_BOARD", ThisKey="B_IDX", OtherKey="IDX", IsForeignKey=true)]
		public TB_BOARD TB_BOARD
		{
			get
			{
				return this._TB_BOARD.Entity;
			}
			set
			{
				TB_BOARD previousValue = this._TB_BOARD.Entity;
				if (((previousValue != value) 
							|| (this._TB_BOARD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_BOARD.Entity = null;
						previousValue.TB_REPLY.Remove(this);
					}
					this._TB_BOARD.Entity = value;
					if ((value != null))
					{
						value.TB_REPLY.Add(this);
						this._B_IDX = value.IDX;
					}
					else
					{
						this._B_IDX = default(Nullable<int>);
					}
					this.SendPropertyChanged("TB_BOARD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
